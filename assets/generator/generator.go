package generator

import (
	"image"
	"image/color"
	"image/png"
	"io"
	"math/rand"
	"time"
)

const (
	width  = 1024
	height = 1024
	colMin = 2
	colMax = 10
	rowMin = 2
	rowMax = 10
)

// ref. https://github.com/mui/material-ui/tree/7bddc86c9f658142841ac3a202d9373ac95343bf/packages/mui-material/src/colors
var colors = []color.RGBA{
	{255, 248, 225, 255},
	{255, 236, 179, 255},
	{255, 224, 130, 255},
	{255, 213, 79, 255},
	{255, 202, 40, 255},
	{255, 193, 7, 255},
	{255, 179, 0, 255},
	{255, 160, 0, 255},
	{255, 143, 0, 255},
	{255, 111, 0, 255},
	{255, 229, 127, 255},
	{255, 215, 64, 255},
	{255, 196, 0, 255},
	{255, 171, 0, 255},
	{227, 242, 253, 255},
	{187, 222, 251, 255},
	{144, 202, 249, 255},
	{100, 181, 246, 255},
	{66, 165, 245, 255},
	{33, 150, 243, 255},
	{30, 136, 229, 255},
	{25, 118, 210, 255},
	{21, 101, 192, 255},
	{13, 71, 161, 255},
	{130, 177, 255, 255},
	{68, 138, 255, 255},
	{41, 121, 255, 255},
	{41, 98, 255, 255},
	{236, 239, 241, 255},
	{207, 216, 220, 255},
	{176, 190, 197, 255},
	{144, 164, 174, 255},
	{120, 144, 156, 255},
	{96, 125, 139, 255},
	{84, 110, 122, 255},
	{69, 90, 100, 255},
	{55, 71, 79, 255},
	{38, 50, 56, 255},
	{207, 216, 220, 255},
	{176, 190, 197, 255},
	{120, 144, 156, 255},
	{69, 90, 100, 255},
	{239, 235, 233, 255},
	{215, 204, 200, 255},
	{188, 170, 164, 255},
	{161, 136, 127, 255},
	{141, 110, 99, 255},
	{121, 85, 72, 255},
	{109, 76, 65, 255},
	{93, 64, 55, 255},
	{78, 52, 46, 255},
	{62, 39, 35, 255},
	{215, 204, 200, 255},
	{188, 170, 164, 255},
	{141, 110, 99, 255},
	{93, 64, 55, 255},
	{224, 247, 250, 255},
	{178, 235, 242, 255},
	{128, 222, 234, 255},
	{77, 208, 225, 255},
	{38, 198, 218, 255},
	{0, 188, 212, 255},
	{0, 172, 193, 255},
	{0, 151, 167, 255},
	{0, 131, 143, 255},
	{0, 96, 100, 255},
	{132, 255, 255, 255},
	{24, 255, 255, 255},
	{0, 229, 255, 255},
	{0, 184, 212, 255},
	{251, 233, 231, 255},
	{255, 204, 188, 255},
	{255, 171, 145, 255},
	{255, 138, 101, 255},
	{255, 112, 67, 255},
	{255, 87, 34, 255},
	{244, 81, 30, 255},
	{230, 74, 25, 255},
	{216, 67, 21, 255},
	{191, 54, 12, 255},
	{255, 158, 128, 255},
	{255, 110, 64, 255},
	{255, 61, 0, 255},
	{221, 44, 0, 255},
	{237, 231, 246, 255},
	{209, 196, 233, 255},
	{179, 157, 219, 255},
	{149, 117, 205, 255},
	{126, 87, 194, 255},
	{103, 58, 183, 255},
	{94, 53, 177, 255},
	{81, 45, 168, 255},
	{69, 39, 160, 255},
	{49, 27, 146, 255},
	{179, 136, 255, 255},
	{124, 77, 255, 255},
	{101, 31, 255, 255},
	{98, 0, 234, 255},
	{232, 245, 233, 255},
	{200, 230, 201, 255},
	{165, 214, 167, 255},
	{129, 199, 132, 255},
	{102, 187, 106, 255},
	{76, 175, 80, 255},
	{67, 160, 71, 255},
	{56, 142, 60, 255},
	{46, 125, 50, 255},
	{27, 94, 32, 255},
	{185, 246, 202, 255},
	{105, 240, 174, 255},
	{0, 230, 118, 255},
	{0, 200, 83, 255},
	{250, 250, 250, 255},
	{245, 245, 245, 255},
	{238, 238, 238, 255},
	{224, 224, 224, 255},
	{189, 189, 189, 255},
	{158, 158, 158, 255},
	{117, 117, 117, 255},
	{97, 97, 97, 255},
	{66, 66, 66, 255},
	{33, 33, 33, 255},
	{245, 245, 245, 255},
	{238, 238, 238, 255},
	{189, 189, 189, 255},
	{97, 97, 97, 255},
	{232, 234, 246, 255},
	{197, 202, 233, 255},
	{159, 168, 218, 255},
	{121, 134, 203, 255},
	{92, 107, 192, 255},
	{63, 81, 181, 255},
	{57, 73, 171, 255},
	{48, 63, 159, 255},
	{40, 53, 147, 255},
	{26, 35, 126, 255},
	{140, 158, 255, 255},
	{83, 109, 254, 255},
	{61, 90, 254, 255},
	{48, 79, 254, 255},
	{225, 245, 254, 255},
	{179, 229, 252, 255},
	{129, 212, 250, 255},
	{79, 195, 247, 255},
	{41, 182, 246, 255},
	{3, 169, 244, 255},
	{3, 155, 229, 255},
	{2, 136, 209, 255},
	{2, 119, 189, 255},
	{1, 87, 155, 255},
	{128, 216, 255, 255},
	{64, 196, 255, 255},
	{0, 176, 255, 255},
	{0, 145, 234, 255},
	{241, 248, 233, 255},
	{220, 237, 200, 255},
	{197, 225, 165, 255},
	{174, 213, 129, 255},
	{156, 204, 101, 255},
	{139, 195, 74, 255},
	{124, 179, 66, 255},
	{104, 159, 56, 255},
	{85, 139, 47, 255},
	{51, 105, 30, 255},
	{204, 255, 144, 255},
	{178, 255, 89, 255},
	{118, 255, 3, 255},
	{100, 221, 23, 255},
	{249, 251, 231, 255},
	{240, 244, 195, 255},
	{230, 238, 156, 255},
	{220, 231, 117, 255},
	{212, 225, 87, 255},
	{205, 220, 57, 255},
	{192, 202, 51, 255},
	{175, 180, 43, 255},
	{158, 157, 36, 255},
	{130, 119, 23, 255},
	{244, 255, 129, 255},
	{238, 255, 65, 255},
	{198, 255, 0, 255},
	{174, 234, 0, 255},
	{255, 243, 224, 255},
	{255, 224, 178, 255},
	{255, 204, 128, 255},
	{255, 183, 77, 255},
	{255, 167, 38, 255},
	{255, 152, 0, 255},
	{251, 140, 0, 255},
	{245, 124, 0, 255},
	{239, 108, 0, 255},
	{230, 81, 0, 255},
	{255, 209, 128, 255},
	{255, 171, 64, 255},
	{255, 145, 0, 255},
	{255, 109, 0, 255},
	{252, 228, 236, 255},
	{248, 187, 208, 255},
	{244, 143, 177, 255},
	{240, 98, 146, 255},
	{236, 64, 122, 255},
	{233, 30, 99, 255},
	{216, 27, 96, 255},
	{194, 24, 91, 255},
	{173, 20, 87, 255},
	{136, 14, 79, 255},
	{255, 128, 171, 255},
	{255, 64, 129, 255},
	{245, 0, 87, 255},
	{197, 17, 98, 255},
	{243, 229, 245, 255},
	{225, 190, 231, 255},
	{206, 147, 216, 255},
	{186, 104, 200, 255},
	{171, 71, 188, 255},
	{156, 39, 176, 255},
	{142, 36, 170, 255},
	{123, 31, 162, 255},
	{106, 27, 154, 255},
	{74, 20, 140, 255},
	{234, 128, 252, 255},
	{224, 64, 251, 255},
	{213, 0, 249, 255},
	{170, 0, 255, 255},
	{255, 235, 238, 255},
	{255, 205, 210, 255},
	{239, 154, 154, 255},
	{229, 115, 115, 255},
	{239, 83, 80, 255},
	{244, 67, 54, 255},
	{229, 57, 53, 255},
	{211, 47, 47, 255},
	{198, 40, 40, 255},
	{183, 28, 28, 255},
	{255, 138, 128, 255},
	{255, 82, 82, 255},
	{255, 23, 68, 255},
	{213, 0, 0, 255},
	{224, 242, 241, 255},
	{178, 223, 219, 255},
	{128, 203, 196, 255},
	{77, 182, 172, 255},
	{38, 166, 154, 255},
	{0, 150, 136, 255},
	{0, 137, 123, 255},
	{0, 121, 107, 255},
	{0, 105, 92, 255},
	{0, 77, 64, 255},
	{167, 255, 235, 255},
	{100, 255, 218, 255},
	{29, 233, 182, 255},
	{0, 191, 165, 255},
	{255, 253, 231, 255},
	{255, 249, 196, 255},
	{255, 245, 157, 255},
	{255, 241, 118, 255},
	{255, 238, 88, 255},
	{255, 235, 59, 255},
	{253, 216, 53, 255},
	{251, 192, 45, 255},
	{249, 168, 37, 255},
	{245, 127, 23, 255},
	{255, 255, 141, 255},
	{255, 255, 0, 255},
	{255, 234, 0, 255},
	{255, 214, 0, 255},
	{255, 255, 255, 255},
	{0, 0, 0, 255},
}

func init() {
	rand.Seed(time.Now().UnixNano())
}

func GenerateIcon(w io.Writer) {
	_colors := colors[:]
	rand.Shuffle(len(_colors), func(i, j int) { _colors[i], _colors[j] = _colors[j], _colors[i] })
	img := image.NewRGBA(image.Rect(0, 0, width, height))
	col, row := rand.Intn(colMax-colMin)+colMin+1, rand.Intn(rowMax-rowMin)+rowMin+1

	for _col := 0; _col < col; _col++ {
		for _row := 0; _row < row; _row++ {
			x1, x2 := calcPosition(_col, col, width), calcPosition(_col+1, col, width)
			y1, y2 := calcPosition(_row, row, height), calcPosition(_row+1, row, height)
			c := _colors[_row*col+_col]
			drawFilledRect(img, x1, y1, x2, y2, c)
		}
	}

	png.Encode(w, img)
}

func drawFilledRect(img *image.RGBA, x1, y1, x2, y2 int, c color.RGBA) {
	for x := x1; x <= x2; x++ {
		for y := y1; y <= y2; y++ {
			img.Set(x, y, c)
		}
	}
}

func calcPosition(current, max, size int) int {
	if current <= 0 {
		return 0
	}

	if current >= max {
		return size
	}

	return int(float64(size) * float64(current) / float64(max))
}
